{"version":3,"sources":["src/multi-index.js"],"names":[],"mappings":"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","file":"src/multi-index.js","sourcesContent":["var _ = require('lodash');\n\nclass MultiIndexList {\n    constructor(list) {\n        this.list = list || [];\n        this.maps = {};\n        this.listIndexMaps = {};\n    }\n    getList() {\n        return this.list.slice();\n    }\n\n    indexBy(...indexKeys) {\n        this.indexKeys = indexKeys;\n        this.reindex();\n        return this;\n    }\n    groupBy(...groupKeys) {\n        this.groupKeys = groupKeys; // same as indexKeys, but expects multiple in list and returns array for each key\n        this.regroup();\n        return this;\n    }\n\n    reindex() {\n        _.each(this.indexKeys, indexKey => {\n            this.maps[indexKey] = _.indexBy(this.list, indexKey);\n            this.listIndexMaps[indexKey] = _.object(_.map(this.list, (item, i) => [item[indexKey], i]));\n        });\n        return this;\n    }\n    regroup() {\n        _.each(this.groupKeys, groupKey => {\n            this.maps[groupKey] = _.groupBy(this.list, groupKey);\n\n            var listIndexMap = {};\n            _.each(this.list, (item, i) => {\n                var indices = listIndexMap[item[groupKey]] || [];\n                listIndexMap[item[groupKey]] = indices.concat([i]);\n            });\n            this.listIndexMaps[groupKey] = listIndexMap;\n        });\n        return this;\n    }\n    refresh() { this.reindex().regroup(); }\n\n    by(key) {\n        if(!(key in this.maps)) throw key + \"not a valid index or group, use indexBy or groupBy first\";\n        return {\n            get: keyValue => this.maps[key][keyValue],\n            update: (keyValue, value) => this.updateBy(key, keyValue, value),\n            remove: keyValue => this.removeBy(key, keyValue),\n            listIndex: keyValue => this.listIndexBy(key)[keyValue]\n        };\n    }\n    listIndexBy(key) {\n        // get the index of an item in the original list ie. list[listIndexBy('id')[myId]] == by('id')[myId]\n        if(!(key in this.listIndexMaps)) throw key + \"not a valid index or group, use indexBy or groupBy first\";\n        return this.listIndexMaps[key];\n    }\n    updateBy(key, keyValue, value) {\n        // todo handle groups, this only works for indices\n        // todo have two different methods, one for 'extend' and one for 'set'?\n        this.list.splice(this.listIndexBy(key)[keyValue], 1, value);\n        this.refresh();\n    }\n    removeBy(key, keyValue) {\n        // todo handle groups, this only works for indices\n        this.list.splice(this.listIndexBy(key)[keyValue], 1);\n        this.refresh();\n    }\n\n    setList(list) {\n        this.list = list;\n        this.refresh();\n    }\n}\n\nmodule.exports = MultiIndexList;"]}